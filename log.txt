1.
Dataset                                 Kaggle
Augmentation config                     (rescale=1.0/255, rotation_range=40,width_shift_range=0.2, height_shift_range=0.2, shear_range=0.2, zoom_range=0.2, horizontal_flip=True, # brightness_range=[0.5, 1.5], fill_mode='nearest')
Augmentation for test/val data          No
Fine-tune                               layers[-50:]
Layer trainable                         True
Epoch                                   15
Layers                                  Flatten()(BASE_MODEL.output),
                                        Dense(512, activation='relu'),
                                        Dropout(0.3),
                                        Dense(5, activation='softmax')
Compile                                 (optimizer=tf.keras.optimizers.Adam(learning_rate=1e-4), loss='categorical_crossentropy', metrics=['accuracy'])
ModelCheckpoint                         (filepath='resnet50_best.keras', verbose=False, save_best_only=True, monitor='val_loss', mode='min')
EarlyStopping                           (monitor='val_loss', patience=10, restore_best_weights=True, mode='min')
ReduceLROnPlateau                       (monitor='val_loss', factor=0.1, patience=3, min_lr=1e-7)
Model training                          (training_data, steps_per_epoch=len(training_data), epochs=15, validation_data=testing_data, validation_steps=len(testing_data), class_weight=class_weights_dict, callbacks=[checkpoint, early_stop, reduce_lr])
Result

Epoch 15/15
99/99 [==============================] - 95s 961ms/step - loss: 0.0528 - accuracy: 0.9826 - val_loss: 0.1715 - val_accuracy: 0.9645 - lr: 1.0000e-06
Test Accuracy: 0.9645
43/43 [==============================] - 5s 104ms/step
              precision    recall  f1-score   support

     battery       0.19      0.19      0.19       281
   cardboard       0.17      0.17      0.17       267
       metal       0.13      0.14      0.14       230
       paper       0.23      0.22      0.22       315
     plastic       0.21      0.20      0.21       259

    accuracy                           0.19      1352
   macro avg       0.19      0.19      0.19      1352
weighted avg       0.19      0.19      0.19      1352

[[54 63 45 62 57]
 [57 46 56 64 44]
 [45 47 32 62 44]
 [67 60 59 70 59]
 [55 53 48 50 53]]

2.
Dataset                                 Kaggle
Augmentation config                     (rescale=1.0/255, rotation_range=40,width_shift_range=0.2, height_shift_range=0.2, shear_range=0.2, zoom_range=0.2, horizontal_flip=True, # brightness_range=[0.5, 1.5], fill_mode='nearest')
Augmentation for test/val data          No
Fine-tune                               layers[-50:]
Layer trainable                         True
Epoch                                   15
Layers                                  Flatten()(BASE_MODEL.output),
                                        Dense(512, activation='relu'),
                                        BatchNormalization()(x),
                                        Dense(256, activation='relu'),
                                        BatchNormalization()(x),
                                        Dense(128, activation='relu'),
                                        BatchNormalization()(x),
                                        Dropout(0.5),
                                        Dense(5, activation='softmax')
Compile                                 (optimizer=tf.keras.optimizers.Adam(learning_rate=1e-4), loss='categorical_crossentropy', metrics=['accuracy'])
ModelCheckpoint                         (filepath='resnet50_best.keras', verbose=False, save_best_only=True, monitor='val_loss', mode='min')
EarlyStopping                           (monitor='val_loss', patience=10, restore_best_weights=True, mode='min')
ReduceLROnPlateau                       (monitor='val_loss', factor=0.1, patience=3, min_lr=1e-7)
Model training                          (training_data, steps_per_epoch=len(training_data), epochs=15, validation_data=testing_data, validation_steps=len(testing_data), class_weight=class_weights_dict, callbacks=[checkpoint, early_stop, reduce_lr])
Result

Epoch 15/15
99/99 [==============================] - 87s 868ms/step - loss: 0.0747 - accuracy: 0.9763 - val_loss: 0.1540 - val_accuracy: 0.9564 - lr: 1.0000e-05
Test Accuracy: 0.9564
43/43 [==============================] - 5s 105ms/step
              precision    recall  f1-score   support

     battery       0.20      0.19      0.19       281
   cardboard       0.23      0.23      0.23       267
       metal       0.17      0.18      0.18       230
       paper       0.21      0.21      0.21       315
     plastic       0.16      0.16      0.16       259

    accuracy                           0.19      1352
   macro avg       0.19      0.19      0.19      1352
weighted avg       0.19      0.19      0.19      1352

[[54 52 51 64 60]
 [56 61 46 61 43]
 [43 43 42 55 47]
 [71 61 56 65 62]
 [50 50 48 70 41]]

3.
Dataset                                 Kaggle
Augmentation config                     (rescale=1.0/255, rotation_range=40,width_shift_range=0.2, height_shift_range=0.2, shear_range=0.2, zoom_range=0.2, horizontal_flip=True, # brightness_range=[0.5, 1.5], fill_mode='nearest')
Augmentation for test/val data          No
Fine-tune                               layers[-50:]
Layer trainable                         True
Epoch                                   15
Layers                                  Conv2D(128, (3, 3), activation='relu')(x),
                                        MaxPooling2D(pool_size=(2, 2))(x),
                                        BatchNormalization()(x),
                                        Conv2D(128, (3, 3), activation='relu')(x),
                                        MaxPooling2D(pool_size=(2, 2))(x),
                                        BatchNormalization()(x),
                                        Flatten()(x),
                                        Dense(512, activation='relu'),
                                        BatchNormalization()(x),
                                        Dense(256, activation='relu'),
                                        BatchNormalization()(x),
                                        Dense(128, activation='relu'),
                                        BatchNormalization()(x),
                                        Dropout(0.5),
                                        Dense(5, activation='softmax')
Compile                                 (optimizer=tf.keras.optimizers.Adam(learning_rate=1e-4), loss='categorical_crossentropy', metrics=['accuracy'])
ModelCheckpoint                         (filepath='resnet50_best.keras', verbose=False, save_best_only=True, monitor='val_loss', mode='min')
EarlyStopping                           (monitor='val_loss', patience=10, restore_best_weights=True, mode='min')
ReduceLROnPlateau                       (monitor='val_loss', factor=0.1, patience=3, min_lr=1e-7)
Model training                          (training_data, steps_per_epoch=len(training_data), epochs=15, validation_data=testing_data, validation_steps=len(testing_data), class_weight=class_weights_dict, callbacks=[checkpoint, early_stop, reduce_lr])
Result

Epoch 15/15
99/99 [==============================] - 43s 437ms/step - loss: 0.3215 - accuracy: 0.8902 - val_loss: 0.2351 - val_accuracy: 0.9320 - lr: 1.0000e-06
Test Accuracy: 0.9320
43/43 [==============================] - 5s 105ms/step
              precision    recall  f1-score   support

     battery       0.20      0.21      0.21       281
   cardboard       0.20      0.19      0.20       267
       metal       0.17      0.17      0.17       230
       paper       0.25      0.25      0.25       315
     plastic       0.18      0.17      0.17       259

    accuracy                           0.20      1352
   macro avg       0.20      0.20      0.20      1352
weighted avg       0.20      0.20      0.20      1352

[[58 46 53 79 45]
 [62 52 46 55 52]
 [44 47 40 52 47]
 [67 57 52 80 59]
 [53 54 50 58 44]]

4.
Dataset                                 Kaggle
Augmentation config                     (rescale=1.0/255, rotation_range=40,width_shift_range=0.2, height_shift_range=0.2, shear_range=0.2, zoom_range=0.2, horizontal_flip=True, # brightness_range=[0.5, 1.5], fill_mode='nearest')
Augmentation for test/val data          No
Shuffle for test_datagen                False
Fine-tune                               layers[-50:]
Layer trainable                         True
Epoch                                   15
Layers                                  Conv2D(128, (3, 3), activation='relu')(x),
                                        MaxPooling2D(pool_size=(2, 2))(x),
                                        BatchNormalization()(x),
                                        Conv2D(128, (3, 3), activation='relu')(x),
                                        MaxPooling2D(pool_size=(2, 2))(x),
                                        BatchNormalization()(x),
                                        Flatten()(x),
                                        Dense(512, activation='relu'),
                                        BatchNormalization()(x),
                                        Dense(256, activation='relu'),
                                        BatchNormalization()(x),
                                        Dense(128, activation='relu'),
                                        BatchNormalization()(x),
                                        Dropout(0.5),
                                        Dense(5, activation='softmax')
Compile                                 (optimizer=tf.keras.optimizers.Adam(learning_rate=1e-4), loss='categorical_crossentropy', metrics=['accuracy'])
ModelCheckpoint                         (filepath='resnet50_best.keras', verbose=False, save_best_only=True, monitor='val_loss', mode='min')
EarlyStopping                           (monitor='val_loss', patience=10, restore_best_weights=True, mode='min')
ReduceLROnPlateau                       (monitor='val_loss', factor=0.1, patience=3, min_lr=1e-7)
Model training                          (training_data, steps_per_epoch=len(training_data), epochs=15, validation_data=testing_data, validation_steps=len(testing_data), class_weight=class_weights_dict, callbacks=[checkpoint, early_stop, reduce_lr])
Result